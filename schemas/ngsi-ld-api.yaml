openapi: 3.0.3
info:
  title: NGSI-LD API
  version: 1.6.1
  description: ETSI GS CIM 009 V1.6.1 cross-cutting Context Information Management (CIM); NGSI-LD API.
components:
  schemas:
    AnyValue:
      description: Any JSON value as defined by IETF RFC 8259.
    ###
    # Beginning of Options parameters
    #
    options.noOverwrite:
      description: Indicates that no attribute overwrite shall be performed.
      type: string
      enum:
        - noOverwrite
    options.representation:
      description: |
        6.3.7 Representation of Entities. When its value includes the keyword "normalized", a normalized
        representation of Entities shall be provided as defined by clause 4.5.1, with Attributes returned
        in the normalized representation as defined in clauses 4.5.2.2, 4.5.3.2 and 4.5.18.2.

        When its value includes the keyword "concise", a concise lossless representation of Entities shall
        be provided as defined by clause 4.5.1. with Attributes returned in the concise representation as
        defined in clauses 4.5.2.3, 4.5.3.3 and 4.5.18.3. In this case the broker will return data in the
        most concise lossless representation possible, for example removing all Attribute "type" members.

        When its value includes the keyword "keyValues" (or "simplified" as a synonym), a simplified
        representation of Entities shall be provided as defined by clause 4.5.4.

        If the Accept Header is set to "application/geo+json" the response will be in simplified GeoJSON
        format as defined by clause 4.5.17.
      type: string
      enum:
        - normalized
        - concise
        - keyValues
    options.sysAttrs:
      description: 6.3.11 Including system generated attributes.
      type: string
      enum:
        - sysAttrs
    options.temporal:
      description: |
        6.3.12 Simplified or aggregated temporal representation of entities.

        When its value includes the keyword "temporalValues", a simplified temporal representation of
        entities shall be provided as defined by clause 4.5.8.

        When its value includes the keyword "aggregatedValues", an aggregated temporal representation of
        entities shall be provided as defined by clause 4.5.19.

        Only one of the two keywords can be present in the values of the parameter.
      type: string
      enum:
        - temporalValues
        - aggregatedValues
    options.upsert:
      description: |
        6.15.3 Upsert configuration.

        "replace". Indicates that all the existing Entity content shall be replaced (default mode);

        "update". Indicates that existing Entity content shall be updated.
      type: string
      enum:
        - replace
        - update
    #
    # End of Options parameters
    ###
    ###
    #
    # Beginning of 4.8 Temporal Properties
    #
    CreatedAt:
      description: |
        Is defined as the temporal Property at which the Entity, Property or
        Relationship was entered into an NGSI-LD system.
      type: string
      format: date-time
    ModifiedAt:
      description: |
        Is defined as the temporal Property at which the Entity, Property or Relationship
        was last modified in an NGSI-LD system, e.g. in order to correct a previously entered incorrect value.
      type: string
      format: date-time
    DeletedAt:
      description: |
        Is defined as the temporal Property at which the Entity, Property or Relationship was deleted from an NGSI-LD system.

        Entity deletion timestamp. See clause 4.8 It is only used in notifications reporting deletions and in the
        Temporal Representation of Entities (clause 4.5.6), Properties (clause 4.5.7), Relationships (clause 4.5.8)
        and LanguageProperties (clause 5.2.32).
      type: string
      format: date-time
    ObservedAt:
      description: |
        Is defined as the temporal Property at which a certain Property or Relationship became valid or was observed.
        For example, a temperature Value was measured by the sensor at this point in time.
      type: string
      format: date-time
    #
    # End of 4.8 Temporal Properties
    ###
    LdContext:
      description: |
        5.2.3 JSON-LD @context

        When encoding NGSI-LD Entities, Context Source Registrations, Subscriptions and Notifications,
        as pure JSON-LD (MIME type "application/ld+json"), a proper @context shall be included
        as a special member of the corresponding JSON-LD Object.
      oneOf:
        - type: string
          format: uri
        - type: object
        - type: array
          items:
            oneOf:
              - type: string
                format: uri
              - type: object
    Entity.Common:
      description: |
        Fragment of NGSI-LD Entity (see 5.4).
      type: object
      properties:
        id:
          description: |
            Entity id.
          type: string
          format: uri
        type:
          description: |
            Entity Type(s). Both short hand string(s) (type name) or URI(s) are allowed.
          oneOf:
            - type: string
            - type: array
              items:
                type: string
        scope:
          description: |
            Scope.
          oneOf:
            - type: string
            - type: array
              items:
                type: string
    EntityFragment.Input:
      allOf:
        - $ref: '#/components/schemas/Entity.Common'
        - type: object
          properties:
            location:
              description: |
                Default geospatial Property of an entity. See clause 4.7.
              $ref: '#/components/schemas/GeoProperty.Input'
            observationSpace:
              $ref: '#/components/schemas/GeoProperty.Input'
            operationSpace:
              $ref: '#/components/schemas/GeoProperty.Input'
        - type: object
          additionalProperties:
            oneOf:
              - $ref: '#/components/schemas/Property.Input'
              - type: array
                items:
                  $ref: '#/components/schemas/Property.Input'
              - $ref: '#/components/schemas/Relationship.Input'
              - type: array
                items:
                  $ref: '#/components/schemas/Relationship.Input'
    Entity.Input:
      description: |
        5.2.4 NGSI-LD Entity.
      allOf:
        - $ref: '#/components/schemas/EntityFragment.Input'
        - required:
          - id
          - type
    Entity.Output:
      allOf:
        - $ref: '#/components/schemas/Entity.Common'
        - type: object
          properties:
            location:
              description: |
                Default geospatial Property of an entity. See clause 4.7.
              $ref: '#/components/schemas/GeoProperty.Output'
            observationSpace:
              $ref: '#/components/schemas/GeoProperty.Output'
            operationSpace:
              $ref: '#/components/schemas/GeoProperty.Output'
        - type: object
          properties:
            # Clause 5.2.2 Common members. System-generated.
            createdAt:
              $ref: '#/components/schemas/CreatedAt'
            modifiedAt:
              $ref: '#/components/schemas/ModifiedAt'
            deletedAt:
                $ref: '#/components/schemas/DeletedAt'
        - type: object
          additionalProperties:
            oneOf:
              - $ref: '#/components/schemas/Property.Output'
              - type: array
                items:
                  $ref: '#/components/schemas/Property.Output'
              - $ref: '#/components/schemas/Relationship.Output'
              - type: array
                items:
                  $ref: '#/components/schemas/Relationship.Output'
        - required:
          - id
          - type
    EntityNotification.Output:
      allOf:
        - $ref: '#/components/schemas/Entity.Common'
        - type: object
          properties:
            location:
              description: |
                Default geospatial Property of an entity. See clause 4.7.
              $ref: '#/components/schemas/GeoProperty.Output'
            observationSpace:
              $ref: '#/components/schemas/GeoProperty.Output'
            operationSpace:
              $ref: '#/components/schemas/GeoProperty.Output'
        - type: object
          properties:
            # Clause 5.2.2 Common members. System-generated.
            createdAt:
              $ref: '#/components/schemas/CreatedAt'
            modifiedAt:
              $ref: '#/components/schemas/ModifiedAt'
            deletedAt:
                $ref: '#/components/schemas/DeletedAt'
        - type: object
          additionalProperties:
            oneOf:
              - $ref: '#/components/schemas/PropertyNotification.Output'
              - type: array
                items:
                  $ref: '#/components/schemas/PropertyNotification.Output'
              - $ref: '#/components/schemas/RelationshipNotification.Output'
              - type: array
                items:
                  $ref: '#/components/schemas/RelationshipNotification.Output'
              - $ref: '#/components/schemas/LanguagePropertyNotification.Output'
              - type: array
                items:
                  $ref: '#/components/schemas/LanguagePropertyNotification.Output'
        - required:
          - id
          - type
    Property.Common:
      description: |
        5.2.5 NGSI-LD Property.
      type: object
      properties:
        type:
          description: |
            Node type.
          type: string
          enum:
            - Property
        value:
          description: |
            Property value.
          $ref: '#/components/schemas/AnyValue'
        observedAt:
          $ref: '#/components/schemas/ObservedAt'
          description: |
            Timestamp. See clause 4.8.
          type: string
          format: date-time
        unitCode:
          description: |
            Property Value's unit code.
          type: string
        datasetId:
          description: |
            It allows identifying a set or group of property values.
          type: string
          format: uri
    PropertyFragment.Input:
      allOf:
        - $ref: '#/components/schemas/Property.Common'
        - type: object
          additionalProperties:
            oneOf:
              - $ref: '#/components/schemas/Property.Input'
              - type: array
                items:
                  $ref: '#/components/schemas/Property.Input'
              - $ref: '#/components/schemas/Relationship.Input'
              - type: array
                items:
                  $ref: '#/components/schemas/Relationship.Input'
    Property.Input:
      allOf:
        - $ref: '#/components/schemas/PropertyFragment.Input'
      required:
        - type
        - value
    Property.Output:
      allOf:
        - $ref: '#/components/schemas/Property.Common'
        - type: object
          additionalProperties:
            oneOf:
              - $ref: '#/components/schemas/Property.Output'
              - type: array
                items:
                  $ref: '#/components/schemas/Property.Output'
              - $ref: '#/components/schemas/Relationship.Output'
              - type: array
                items:
                  $ref: '#/components/schemas/Relationship.Output'
        - type: object
          properties:
            # Clause 5.2.2 Common members. System-generated
            createdAt:
              $ref: '#/components/schemas/CreatedAt'
            modifiedAt:
              $ref: '#/components/schemas/ModifiedAt'
            deletedAt:
              $ref: '#/components/schemas/DeletedAt'
            instanceId:
              description: |
                A URI uniquely identifying a Property instance,
                as mandated by (see clause 4.5.7). System generated.
              type: string
              format: uri
      required:
        - type
        - value
    PropertyNotification.Output:
      allOf:
        - $ref: '#/components/schemas/Property.Output'
        - type: object
          properties:
            previousValue:
              description: |
                Previous Property value.
              $ref: '#/components/schemas/AnyValue'
    Relationship.Common:
      description: |
        5.2.6 NGSI-LD Relationship.
      properties:
        type:
          description: |
            Node type.
          type: string
          enum:
            - Relationship
        object:
          description: |
            Relationship's target object.
          type: string
          format: uri
        observedAt:
          $ref: '#/components/schemas/ObservedAt'
        datasetId:
          description: |
            It allows identifying a set or group of target relationship objects.
          type: string
          format: uri
    RelationshipFragment.Input:
      allOf:
        - $ref: '#/components/schemas/Relationship.Common'
        - type: object
          additionalProperties:
            oneOf:
              - $ref: '#/components/schemas/Property.Input'
              - type: array
                items:
                  $ref: '#/components/schemas/Property.Input'
              - $ref: '#/components/schemas/Relationship.Input'
              - type: array
                items:
                  $ref: '#/components/schemas/Relationship.Input'
    Relationship.Input:
      allOf:
        - $ref: '#/components/schemas/RelationshipFragment.Input'
      required:
        - type
        - object
    Relationship.Output:
      allOf:
        - $ref: '#/components/schemas/Relationship.Common'
        - type: object
          additionalProperties:
            oneOf:
              - $ref: '#/components/schemas/Property.Output'
              - type: array
                items:
                  $ref: '#/components/schemas/Property.Output'
              - $ref: '#/components/schemas/Relationship.Output'
              - type: array
                items:
                  $ref: '#/components/schemas/Relationship.Output'
        - type: object
          properties:
            # Clause 5.2.2 Common members. System-generated
            createdAt:
              $ref: '#/components/schemas/CreatedAt'
            modifiedAt:
              $ref: '#/components/schemas/ModifiedAt'
            deletedAt:
              $ref: '#/components/schemas/DeletedAt'
            instanceId:
              description: |
                A URI uniquely identifying a Relationship instance
                (see clause 4.5.8). System generated.
              type: string
              format: uri
      required:
        - type
        - object
    RelationshipNotification.Output:
      allOf:
        - $ref: '#/components/schemas/Relationship.Output'
        - type: object
          properties:
            previousObject:
              description: |
                Previous Relationship's target object.
              type: string
              format: uri
    GeoProperty.Common:
      description: |
        5.2.7 NGSI-LD GeoProperty.
      type: object
      properties:
        type:
          description: |
            Node type.
          type: string
          enum:
            - GeoProperty
        value:
          $ref: '#/components/schemas/Geometry'
        observedAt:
          $ref: '#/components/schemas/ObservedAt'
        datasetId:
          description: |
            It allows identifying a set or group of property values.
          type: string
          format: uri
    GeoPropertyFragment.Input:
      allOf:
        - $ref: '#/components/schemas/GeoProperty.Common'
        - type: object
          additionalProperties:
            oneOf:
              - $ref: '#/components/schemas/Property.Input'
              - type: array
                items:
                  $ref: '#/components/schemas/Property.Input'
              - $ref: '#/components/schemas/Relationship.Input'
              - type: array
                items:
                  $ref: '#/components/schemas/Relationship.Input'
    GeoProperty.Input:
      allOf:
        - $ref: '#/components/schemas/GeoPropertyFragment.Input'
      required:
        - type
        - value
    GeoProperty.Output:
      allOf:
        - $ref: '#/components/schemas/GeoProperty.Common'
        - type: object
          additionalProperties:
            oneOf:
              - $ref: '#/components/schemas/Property.Output'
              - type: array
                items:
                  $ref: '#/components/schemas/Property.Output'
              - $ref: '#/components/schemas/Relationship.Output'
              - type: array
                items:
                  $ref: '#/components/schemas/Relationship.Output'
        - type: object
          properties:
            # Clause 5.2.2 Common members. System-generated
            createdAt:
              $ref: '#/components/schemas/CreatedAt'
            modifiedAt:
              $ref: '#/components/schemas/ModifiedAt'
            deletedAt:
              $ref: '#/components/schemas/DeletedAt'
            instanceId:
              description: |
                A URI uniquely identifying a Property instance,
                as mandated by (see clause 4.5.7). System generated.
              type: string
              format: uri
      required:
        - type
        - value
    EntityInfo:
      description: |
        5.2.8 represents what Entities, Entity Types or group of Entity ids
        (as a regular expression pattern mandated by IEEE 1003.2TM [11]) can be provided (by Context Sources).
      type: object
      properties:
        id:
          description: |
            Entity identifier.
          type: string
          format: uri
        idPattern:
          description: |
            A regular expression which denotes a pattern that shall be matched by the provided or subscribed Entities.
          type: string
          format: pattern
        type:
          description: |
            Entity Type (or JSON array, in case of Entities with multiple Entity Types).
          oneOf:
            - type: string
            - type: array
              items:
                type: string
      required:
        - type
    CsourceRegistrationFragment:
      description: |
        5.2.9 represents the data needed to register a new Context Source.
      type: object
      properties:
        id:
          description: |
            Unique registration identifier. (JSON-LD @id). There may be multiple registrations per
            Context Source, i.e. the id is unique per registration.
          type: string
          format: uri
        type:
          description: |
            JSON-LD @type Use reserved type for identifying Context Source Registration.
          type: string
          enum:
            - ContextSourceRegistration
        registrationName:
          description: |
            A name given to this Context Source Registration.
          type: string
          minLength: 1
        description:
          description: |
            A description of this Context Source Registration.
          type: string
          minLength: 1
        information:
          description: |
            Describes the Entities, Properties and Relationships for which the
            Context Source may be able to provide information.
          type: array
          items:
            $ref: '#/components/schemas/RegistrationInfo'
          minItems: 1
        tenant:
          description: |
            Identifies the tenant that has to be specified in all requests to the Context Source that
            are related to the information registered in this Context Source Registration.
            If not present, the default tenant is assumed. Should only be present in systems supporting multi-tenancy.
          type: string
          format: uri
        observationInterval:
          description: |
            If present, the Context Source can be queried for Temporal Entity Representations. (If latest Entity
            information is also provided, a separate Context Registration is needed for this purpose).
            The observationInterval specifies the time interval for which the Context Source can provide
            Entity information as specified by the observedAt Temporal Property.
            A temporal query based on the observedAt Temporal Property, which is the default,
            is matched against the observationInterval for overlap.
          $ref: '#/components/schemas/TimeInterval'
        managementInterval:
          description: |
            If present, the Context Source can be queried for Temporal Entity Representations. (If latest Entity
            information is also provided, a separate Context Registration is needed for this purpose).
            The managementInterval specifies the time interval for which the Context Source can provide Entity
            information as specified by the createdAt, modifiedAt and deletedAt Temporal Properties.
            A temporal query based on the createdAt, modifiedAt or deletedAt Temporal Property is matched
            against the managementInterval for overlap.
          $ref: '#/components/schemas/TimeInterval'
        location:
          description: |
            Location for which the Context Source may be able to provide information.
          $ref: '#/components/schemas/Geometry'
        observationSpace:
          $ref: '#/components/schemas/Geometry'
        operationSpace:
          $ref: '#/components/schemas/Geometry'
        expiresAt:
          description: |
            Provides an expiration date. When passed the Context Source Registration
            will become invalid and the Context Source might no longer be available.
          type: string
          format: date-time
        endpoint:
          description: |
            Endpoint expressed as dereferenceable URI through which the Context Source exposes its NGSI-LD interface.
          type: string
          format: uri
        contextSourceInfo:
          description: |
            Generic {key, value} array to convey optional information to provide
            when contacting the registered Context Source.
          type: array
          items:
            $ref: '#/components/schemas/KeyValuePair'
        scope:
          description: |
            Scopes (see clause 4.18) for which the Context Source has Entities.
          oneOf:
            - type: string
            - type: array
              items:
                type: string
        mode:
          description: |
            The definition of the mode of distributed operation (see clause 4.3.6)
            supported by the registered Context Source.
          type: string
          enum:
            - inclusive
            - exclusive
            - redirect
            - auxiliary
          default: inclusive
        operations:
          description: |
            The definition limited subset of API operations supported by the registered Context Source.

            If undefined, the default set of operations is "federationOps" (see clause 4.20).
          type: array
          items:
            type: string
        refreshRate:
          description: |
            An indication of the likely period of time to elapse between updates at this registered endpoint.
            Brokers may optionally use this information to help implement caching.
          type: string
        management:
          description: |
            Holds additional optional registration management information that can be used
            to limit unnecessary distributed operation requests.
          $ref: '#/components/schemas/RegistrationManagementInfo'
      additionalProperties:
        $ref: '#/components/schemas/AnyValue'
    CsourceRegistration.Input:
      allOf:
        - $ref: '#/components/schemas/CsourceRegistrationFragment'
        - required:
          - type
          - information
          - endpoint
    CsourceRegistration.Output:
      allOf:
        - $ref: '#/components/schemas/CsourceRegistration.Input'
        - type: object
          properties:
            # Clause 5.2.2 Common members
            createdAt:
              $ref: '#/components/schemas/CreatedAt'
            modifiedAt:
              $ref: '#/components/schemas/ModifiedAt'
            deletedAt:
              $ref: '#/components/schemas/DeletedAt'
            status:
              description: |
                Read-only. Status of the Registration. It shall be "ok" if the last attempt to perform a distributed
                operation succeeded. It shall be "failed" if the last attempt to perform a distributed operation failed.
              type: string
              enum:
                - ok
                - failed
            timesSent:
              description: |
                Number of times that the registration triggered a distributed operation, including failed attempts.
              type: number
              minimum: 0
            timesFailed:
              description: Number of times that the registration triggered a distributed operation request that failed.
              type: number
              minimum: 0
            lastSuccess:
              description: |
                Timestamp corresponding to the instant when the last successfully distributed operation was sent.
                Created on first successful operation.
              type: string
              format: date-time
            lastFailure:
              description: |
                Timestamp corresponding to the instant when the last distributed operation resulting in
                a failure (for instance, in the HTTP binding, an HTTP response code other than 2xx) was returned.
              type: string
              format: date-time
        - required:
          - id
    RegistrationInfo:
      description: |
        5.2.10 RegistrationInfo.
      type: object
      properties:
        entities:
          description: |
            Describes the entities for which the CSource may be able to provide information.
          type: array
          items:
            $ref: '#/components/schemas/EntityInfo'
          minItems: 1
        propertyNames:
          description: |
            Describes the Properties that the CSource may be able to provide.
          type: array
          items:
            type: string
          minItems: 1
        relationshipNames:
          description: |
            Describes the Relationships that the CSource may be able to provide.
          type: array
          items:
            type: string
          minItems: 1
    TimeInterval:
      description: |
        5.2.11 NGSI-LD TimeInterval.
      type: object
      properties:
        startAt:
          description: |
            Describes the start of the time interval.
          type: string
          format: date-time
        endAt:
          description: |
            Describes the end of the time interval. If not present the interval is open.
          type: string
          format: date-time
      required:
        - startAt
    Subscription.Common:
      description: |
        5.2.12 represents a Context Subscription.
      type: object
      properties:
        id:
          description: |
            Subscription identifier (JSON-LD @id).
          type: string
          format: uri
        type:
          description: |
            JSON-LD @type.
          type: string
          enum:
            - Subscription
        subscriptionName:
          description: |
            A (short) name given to this Subscription.
          type: string
        description:
          description: |
            Subscription description.
          type: string
        entities:
          description: |
            Entities subscribed.
          type: array
          items:
            $ref: '#/components/schemas/EntitySelector'
          minItems: 1
        notificationTrigger:
          description: |
            The notification triggers listed indicate what kind of changes shall trigger a notification.
            If not present, the default is the combination attributeCreated and attributeUpdated.
            entityUpdated is equivalent to the combination attributeCreated, attributeUpdated and attributeDeleted.
          type: array
          items:
            type: string
            enum:
              - entityCreated
              - entityUpdated
              - entityDeleted
              - attributeCreated
              - attributeUpdated
              - attributeDeleted
          default:
            - attributeCreated
            - attributeUpdated
        q:
          description: |
            Query that shall be met by subscribed entities in order to trigger the notification.
          type: string
        geoQ:
          description: |
            Geoquery that shall be met by subscribed entities in order to trigger the notification.
          $ref: '#/components/schemas/GeoQuery'
        csf:
          description: |
            Context source filter that shall be met by Context Source Registrations describing Context Sources
            to be used for Entity Subscriptions.
          type: string
        isActive:
          description: |
            Allows clients to temporarily pause the subscription by making it inactive.
            true indicates that the Subscription is under operation.
            false indicates that the subscription is paused and notifications shall not be delivered.
          type: boolean
          default: true
        notification:
          description: |
            Notification details.
          $ref: '#/components/schemas/NotificationParams'
        expiresAt:
          description: |
            Expiration date for the subscription.
          type: string
          format: date-time
        temporalQ:
          description: |
            Temporal Query to be used only in Context Registration Subscriptions for matching
            Context Source Registrations of Context Sources providing temporal information.
          $ref: '#/components/schemas/TemporalQuery'
        scopeQ:
          description: |
            Scope query.
          type: string
        lang:
          description: |
            Language filter to be applied to the query (clause 4.15).
          type: string
    SubscriptionFragment.Periodic:
      allOf:
        - $ref: '#/components/schemas/Subscription.Common'
        - properties:
            timeInterval:
              description: |
                Indicates that a notification shall be delivered periodically regardless of attribute changes.
                Actually, when the time interval (in seconds) specified in this value field is reached.
              type: number
              minimum: 1
    SubscriptionFragment.OnChange:
      allOf:
        - $ref: '#/components/schemas/Subscription.Common'
        - properties:
            watchedAttributes:
              description: |
                Watched Attributes (Properties or Relationships). If not defined it means any Attribute.
              type: array
              items:
                type: string
              minItems: 1
            throttling:
              description: |
                Minimal period of time in seconds which shall elapse between two consecutive notifications.
              type: number
              minimum: 1
    SubscriptionFragment:
      oneOf:
        - $ref: '#/components/schemas/SubscriptionFragment.Periodic'
        - $ref: '#/components/schemas/SubscriptionFragment.OnChange'

    Subscription.Periodic:
      allOf:
        - $ref: '#/components/schemas/SubscriptionFragment.Periodic'
        - required:
          - type
          - notification
          - entities
          - timeInterval
    Subscription.OnChange:
      allOf:
        - $ref: '#/components/schemas/SubscriptionFragment.OnChange'
        - required:
          - type
          - notification
    Subscription.Input:
      oneOf:
        - $ref: '#/components/schemas/Subscription.Periodic'
        - $ref: '#/components/schemas/Subscription.OnChange'
    Subscription.Output:
      allOf:
        - $ref: '#/components/schemas/Subscription.Input'
        - type: object
          properties:
            # Clause 5.2.2 Common members. System-generated.
            createdAt:
              $ref: '#/components/schemas/CreatedAt'
            modifiedAt:
              $ref: '#/components/schemas/ModifiedAt'
            deletedAt:
              $ref: '#/components/schemas/DeletedAt'
            status:
              description: |
                Read-only. Provided by the system when querying the details of a subscription.
              type: string
              enum:
                - active
                - paused
                - expired
        - required:
          - id
    GeoQuery:
      description: |
        5.2.13 represents a geoquery used for Subscriptions.
      type: object
      properties:
        geometry:
          description: |
            Type of the reference geometry.
          type: string
        coordinates:
          description: |
            Coordinates of the reference geometry. For the sake of JSON-LD compatibility.
            It can be encoded as a string as described in clause 4.7.1.
          # To be checked
          oneOf:
            - type: string
            - type: array
              items:
                type: object
        georel:
          description: |
            Geo-relationship (near, within, etc.).
          type: string
        geoproperty:
          description: |
            Specifies the GeoProperty to which the GeoQuery is to be applied.
            If not present, the default GeoProperty is location.
          type: string
      required:
        - geometry
        - coordinates
        - georel
    NotificationParams:
      description: |
        5.2.14 represents the parameters that allow to convey the details of a notification.
      type: object
      properties:
        attributes:
          description: |
            Entity Attribute Names (Properties or Relationships) to be included in the notification payload body.
            If undefined it will mean all Attributes.
          type: array
          items:
            type: string
          minItems: 1
        sysAttrs:
          description: |
            If true, the system generated attributes createdAt and modifiedAt are included in
            the response payload body, in the case of a deletion also deletedAt.
          type: boolean
          default: false
        format:
          description: |
            Conveys the representation format of the entities delivered at notification time.
            By default, it will be in the normalized format.
          type: string
          enum:
            - normalized
            - concise
            - keyValues
        showChanges:
          description: |
            If true the previous value (previousValue) of Properties or languageMap (previousLanguageMap) of
            Language Properties or object (previousObject) of Relationships is provided in addition to the current one.
            This requires that it exists, i.e. in case of modifications and deletions,
             but not in the case of creations. showChanges cannot be true in case format is "keyValues".
          type: boolean
          default: false
        endpoint:
          description: |
            Notification endpoint details.
          $ref: '#/components/schemas/Endpoint'
        status:
          description: |
            Status of the Notification. It shall be "ok" if the last attempt to notify the subscriber succeeded.
            It shall be "failed" if the last attempt to notify the subscriber failed.
          type: string
          enum:
            - ok
            - failed
        timesSent:
          description: |
            Number of times that the notification has been sent. Provided by the system when
            querying the details of a subscription.
          type: number
          minimum: 0
        timesFailed:
          description: |
            Number of times an unsuccessful response (or timeout) has been received when deliverying the notification.
            Provided by the system when querying the details of a subscription.
          type: number
          minimum: 0
        lastNotification:
          description: |
            Timestamp corresponding to the instant when the last notification has been sent.
            Provided by the system when querying the details of a subscription.
          type: string
          format: date-time
        lastFailure:
          description: |
            Timestamp corresponding to the instant when the last notification resulting in failure
            (for instance, in the HTTP binding, an HTTP response code different than 200) has been sent.
            Provided by the system when querying the details of a subscription.
          type: string
          format: date-time
        lastSuccess:
          description: |
            Timestamp corresponding to the instant when the last successful (200 OK response) notification
            has been sent. Provided by the system when querying the details of a subscription.
          type: string
          format: date-time
      required:
        - endpoint
    Endpoint:
      description: |
        5.2.15 represents the parameters that are required in order to define an endpoint for notifications.
      type: object
      properties:
        uri:
          description: |
            URI which conveys the endpoint which will receive the notification.
          type: string
          format: uri
        accept:
          description: |
            Intended to convey the MIME type of the notification payload body (JSON, or JSON-LD, or GeoJSON).
            If not present, default is "application/json".
          type: string
          enum:
            - application/json
            - application/ld+json
            - application/geo+json
          default: application/json
        timeout:
          description: |
            Maximum period of time in milliseconds which may elapse before a notification is assumed to have failed.
            The NGSI-LD system can override this value. This only applies if the binding
            protocol always returns a response.
          type: number
        cooldown:
          description: |
            Once a failure has occurred, minimum period of time in milliseconds which shall elapse before
            attempting to make a subsequent notification to the same endpoint after failure.
            If requests are received before the cooldown period has expired, no notification is sent.
          type: number
        receiverInfo:
          description: |
            Generic {key, value} array to convey optional information to the receiver.
          type: array
          items:
            $ref: '#/components/schemas/KeyValuePair'
        notifierInfo:
          description: |
            Generic {key, value} array to set up the communication channel.
          type: array
          items:
            $ref: '#/components/schemas/KeyValuePair'
      required:
        - uri
    BatchOperationResult:
      description: |
        5.2.16 represents the result of a batch operation.
      type: object
      properties:
        success:
          description: |
            Array of Entity Ids corresponding to the Entities that were successfully
            treated by the concerned operation.
          type: array
          items:
            type: string
            format: uri
        errors:
          description: |
            One array item per Entity in error.
          type: array
          items:
            $ref: '#/components/schemas/BatchEntityError'
      required:
        - success
        - error
    BatchEntityError:
      description: |
        5.2.17 represents an error raised (associated to a particular Entity) during
        the execution of a batch or distributed operation.
      type: object
      properties:
        entityId:
          description: |
            Entity Id corresponding to the Entity in error.
          type: string
          format: uri
        registrationId:
          description: |
            Registration Id corresponding to a failed distributed operation (optional).
          type: string
          format: uri
        error:
          description: |
            One instance per Entity in error.
          $ref: '#/components/schemas/ProblemDetails'
      required:
        - entityId
        - error
    UpdateResult:
      description: |
        5.2.18 represents the result of Attribute update (append or update) operations
        in the NGSI-LD API regardless of whether local or distributed.
      type: object
      properties:
        updated:
          description: |
            List of Attributes (represented by their Name) that were appended or updated.
          type: array
          items:
            type: string
        notUpdated:
          description: |
            List which contains the Attributes (represented by their Name) that were not updated,
            together with the reason for not being updated.
          type: array
          items:
            $ref: '#/components/schemas/NotUpdatedDetails'
      required:
        - updated
        - notUpdated
    NotUpdatedDetails:
      description: |
        5.2.19 represents additional information provided by an implementation
        when an Attribute update did not happen.
      type: object
      properties:
        attributeName:
          description: |
            Attribute name.
          type: string
        reason:
          description: |
            Reason for not having changed such Attribute.
          type: string
        registrationId:
          description: |
            Registration Id corresponding to a failed distributed operation (optional).
          type: string
          format: uri
      required:
        - attributeName
        - reason
    EntityTemporalFragment.Input:
      description: |
        5.2.20 This is the same data type as mandated by clause 5.2.4 with the only deviation that
        the representation of Properties and Relationships shall be the temporal one
        (arrays of (Property or Relationship) instances represented by JSON-LD objects)
        as defined in clauses 4.5.7 and 4.5.8. Alternatively it is possible to specify
        the EntityTemporal by using the "Simplified Temporal Representation of an Entity",
        as defined in clause 4.5.9.
      allOf:
        - $ref: '#/components/schemas/Entity.Common'
        - type: object
          properties:
            location:
              description: |
                Default geospatial Property of an entity. See clause 4.7.
              $ref: '#/components/schemas/GeoProperty.Input'
            observationSpace:
              $ref: '#/components/schemas/GeoProperty.Input'
            operationSpace:
              $ref: '#/components/schemas/GeoProperty.Input'
        - type: object
          additionalProperties:
            oneOf:
              - type: array
                items:
                  $ref: '#/components/schemas/Property.Input'
              - type: array
                items:
                  $ref: '#/components/schemas/Relationship.Input'
              - type: array
                items:
                  $ref: '#/components/schemas/GeoProperty.Input'
              - type: array
                items:
                  $ref: '#/components/schemas/LanguageProperty.Input'
    EntityTemporal.Input:
      allOf:
        - $ref: '#/components/schemas/EntityTemporalFragment.Input'
        - required:
          - id
          - type
    EntityTemporal.Output:
      allOf:
        - $ref: '#/components/schemas/Entity.Common'
        - type: object
          properties:
            location:
              description: |
                Default geospatial Property of an entity. See clause 4.7.
              $ref: '#/components/schemas/GeoProperty.Output'
            observationSpace:
              $ref: '#/components/schemas/GeoProperty.Output'
            operationSpace:
              $ref: '#/components/schemas/GeoProperty.Output'
        - type: object
          properties:
            # Clause 5.2.2 Common members. System-generated.
            createdAt:
              $ref: '#/components/schemas/CreatedAt'
            modifiedAt:
              $ref: '#/components/schemas/ModifiedAt'
            deletedAt:
                $ref: '#/components/schemas/DeletedAt'
        - type: object
          additionalProperties:
            oneOf:
              - type: array
                items:
                  $ref: '#/components/schemas/Property.Output'
              - type: array
                items:
                  $ref: '#/components/schemas/Relationship.Output'
              - type: array
                items:
                  $ref: '#/components/schemas/GeoProperty.Output'
              - type: array
                items:
                  $ref: '#/components/schemas/LanguageProperty.Output'
        - required:
          - id
          - type
    TemporalQuery:
      description: |
        5.2.21 This datatype represents a temporal query.
      type: object
      properties:
        timerel:
          description: |
            Allowed values: "before", "after" and "between".
          type: string
          enum:
            - before
            - after
            - between
        timeAt:
          description: |
            It shall be a DateTime.
          type: string
          format: date-time
        endTimeAt:
          description: |
            It shall be a DateTime. Cardinality shall be 1 if timerel is equal to "between".
          type: string
          format: date-time
        timeproperty:
          description: |
            Allowed values: "observedAt", "createdAt", "modifiedAt" and "deletedAt".
            If not specified, the default is "observedAt". (See clause 4.8).
          type: string
          enum:
            - observedAt
            - createdAt
            - modifiedAt
            - deletedAt
          default: observedAt
      required:
        - timerel
        - timeAt
    KeyValuePair:
      description: |
        5.2.22 represents the optional information that is required when contacting an endpoint for notifications.
      type: object
      properties:
        key:
          description: |
            The key of the key/value pair.
          type: string
        value:
          description: |
            The value of the key/value pair.
          type: string
      required:
        - key
        - value
    Query:
      description: |
        5.2.23 This datatype represents the information that is required in order to convey
        a query when a "Query Entities" operation is to be performed (as pe clause 5.7.2).
      type: object
      properties:
        type:
          description: |
            JSON-LD @type.
          type: string
          enum:
            - Query
        entities:
          description: |
            Entity ids, id pattern and Entity types that shall be matched by Entities in order to be retrieved.
          type: array
          items:
            $ref: '#/components/schemas/EntitySelector'
          minItems: 1
        attrs:
          description: |
            List of Attributes that shall be matched by Entities in order to be retrieved.
            If not present all Attributes will be retrieved.
          type: array
          items:
            type: string
          minItems: 1
        q:
          description: |
            Query that shall be matched by Entities in order to be retrieved.
          type: string
        geoQ:
          description: |
            Geoquery that shall be matched by Entities in order be retrieved.
          $ref: '#/components/schemas/GeoQuery'
        csf:
          description: |
            Context source filter that shall be matched by Context Source Registrations describing
            Context Sources to be used for retrieving Entities.
          type: string
        temporalQ:
          description: |
            Temporal Query to be present only for "Query Temporal Evolution of Entities" operation (clause 5.7.4).
          $ref: '#/components/schemas/TemporalQuery'
        scopeQ:
          description: Scope query.
          type: string
        lang:
          description: Language filter to be applied to the query (clause 4.15).
          type: string
      required:
        - type
    Query.temporal:
      description: |
        5.2.23 This datatype represents the information that is required in order to convey
        a query when a "Query Temporal Evolution of Entities" operation is to be performed (as pe clause 5.7.4).
      allOf:
        - $ref: '#/components/schemas/Query'
        - type: object
          properties:
            temporalQ:
              description: |
                Temporal Query to be present only for "Query Temporal Evolution of Entities" operation (clause 5.7.4).
              $ref: '#/components/schemas/TemporalQuery'
        - required:
          - temporalQ
    EntityTypeList:
      description: |
        5.2.24 This type represents the data needed to define the entity type
        list representation as mandated by clause 4.5.10.
      type: object
      properties:
        id:
          description: |
            Unique identifier for the entity type list.
          type: string
          format: uri
        type:
          description: |
            JSON-LD @type.
          type: string
          enum:
            - EntityTypeList
        typeList:
          description: |
            List containing the entity type names.
          type: array
          items:
            type: string
      required:
        - id
        - type
        - typeList
    EntityType:
      description: |
        5.2.25 This type represents the data needed to define the elements of the detailed
        entity type list representation as mandated by clause 4.5.11.
      type: object
      properties:
        id:
          description: |
            Fully Qualified Name (FQN) of the entity type being described.
          type: string
          format: uri
        type:
          description: |
            JSON-LD @type.
          type: string
          enum:
            - EntityType
        typeName:
          description: |
            Name of the entity type, short name if contained in @context.
          type: string
        attributeNames:
          description: |
            List containing the names of attributes that instances of the entity type can have.
          type: array
          items:
            type: string
      required:
        - id
        - type
        - typeName
        - attributeNames
    EntityTypeInfo:
      description: |
        5.2.26 This type represents the data needed to define the detailed entity type
        information representation as mandated by clause 4.5.12.
      type: object
      properties:
        id:
          description: |
            Fully Qualified Name (FQN) of the entity type being described.
          type: string
          format: uri
        type:
          description: |
            JSON-LD @type.
          type: string
          enum:
            - EntityTypeInfo
        typeName:
          description: |
            Name of the entity type, short name if contained in @context.
          type: string
        entityCount:
          description: |
            Number of entity instances of this entity type.
          type: number
        attributeDetails:
          description: |
            List of attributes that entity instances with the specified entity type can have.
          type: array
          items:
            $ref: '#/components/schemas/Attribute'
      required:
        - id
        - type
        - typeName
        - entityCount
        - attributeDetails
    AttributeList:
      description: |
        5.2.27 This type represents the data needed to define the attribute
        list representation as mandated by clause 4.5.13.
      type: object
      properties:
        id:
          description: |
            Unique identifier for the attribute list.
          type: string
          format: uri
        type:
          description: |
            JSON-LD @type.
          type: string
          enum:
            - AttributeList
        attributeList:
          description: |
            List containing the attribute names.
          type: array
          items:
            type: string
      required:
        - id
        - type
        - attributeList
    Attribute:
      description: |
        5.2.28 This type represents the data needed to define the attribute information.
      type: object
      properties:
        id:
          description: |
            Full URI of attribute name.
          type: string
          format: uri
        type:
          description: |
            JSON-LD @type.
          type: string
          enum:
            - Attribute
        attributeName:
          description: |
            Name of the attribute, short name if contained in @context.
          type: string
        attributeCount:
          description: |
            Number of attribute instances with this attribute name.
          type: number
        attributeTypes:
          description: |
            List of attribute types (e.g. Property, Relationship, GeoProperty) for which
            entity instances exist, which contain an attribute with this name.
          type: array
          items:
            type: string
        typeNames:
          description: |
            List of entity type names for which entity instances exist containing
            attributes that have the respective name.
          type: array
          items:
            type: string
      required:
        - id
        - type
        - attributeName
    Feature:
      description: |
        5.2.29 This data type represents a spatially bounded Entity in GeoJSON format, as mandated by IETF RFC 7946.
      type: object
      properties:
        id:
          description: |
            Entity id.
          type: string
          format: uri
        type:
          description: |
            GeoJSON Type.
          type: string
          enum:
            - Feature
        geometry:
          description: |
            Null if no matching GeoProperty.
          $ref: '#/components/schemas/Geometry'
        properties:
          description: |
            List of attributes as mandated by clause 5.2.31.
          $ref: '#/components/schemas/FeatureProperties'
        '@context':
          description: |
            JSON-LD @context. This field is only present if requested in the payload by
            the HTTP Prefer Header (IETF RFC 724).
          $ref: '#/components/schemas/LdContext'
      required:
        - id
        - type
        - geometry
        - properties
    FeatureCollection:
      description: |
          5.2.30 This data type represents a list of spatially bounded
          Entities in GeoJSON format, as mandated by IETF RFC 7946.
      type: object
      properties:
        type:
          description: |
            GeoJSON Type.
          type: string
          enum:
            - FeatureCollection
        features:
          description: |
            In the case that no matches are found, "features" will be an empty array.
          type: array
          items:
            $ref: '#/components/schemas/Feature'
        '@context':
          description: |
            JSON-LD @context. This field is only present if requested in the payload
            by the HTTP Prefer Header (IETF RFC 724).
          $ref: '#/components/schemas/LdContext'
      required:
        - type
    FeatureProperties:
      description: |
        5.2.31 This data type represents the type and the associated attributes
        (Properties and Relationships) of an Entity in GeoJSON format.
      type: object
      properties:
        type:
          description: |
            Entity Type (or JSON array, in case of Entities with multiple Entity Types).
            Both short hand string (type name) or URI are allowed.
          oneOf:
            - type: string
            - type: array
              items:
                type: string
      additionalProperties:
        oneOf:
          - $ref: '#/components/schemas/Property.Output'
          - type: array
            items:
              $ref: '#/components/schemas/Property.Output'
          - $ref: '#/components/schemas/Relationship.Output'
          - type: array
            items:
              $ref: '#/components/schemas/Relationship.Output'
          - $ref: '#/components/schemas/GeoProperty.Output'
          - type: array
            items:
              $ref: '#/components/schemas/GeoProperty.Output'
          - $ref: '#/components/schemas/LanguageProperty.Output'
          - type: array
            items:
              $ref: '#/components/schemas/LanguageProperty.Output'
      required:
        - type
    LanguageProperty.Common:
      description: |
        5.2.32 NGSI-LD LanguageProperty.
      type: object
      properties:
        type:
          description: |
            Node type.
          type: string
          enum:
            - LanguageProperty
        languageMap:
          description: |
            String Property Values defined in multiple natural languages.
          type: object
        observedAt:
          $ref: '#/components/schemas/ObservedAt'
        datasetId:
          description: |
            It allows identifying a set or group of property values.
          type: string
          format: uri
    LanguagePropertyFragment.Input:
      allOf:
        - $ref: '#/components/schemas/LanguageProperty.Common'
        - type: object
          additionalProperties:
            oneOf:
              - $ref: '#/components/schemas/Property.Input'
              - type: array
                items:
                  $ref: '#/components/schemas/Property.Input'
              - $ref: '#/components/schemas/Relationship.Input'
              - type: array
                items:
                  $ref: '#/components/schemas/Relationship.Input'
    LanguageProperty.Input:
      allOf:
        - $ref: '#/components/schemas/LanguagePropertyFragment.Input'
      required:
        - type
        - value
    LanguageProperty.Output:
      allOf:
        - $ref: '#/components/schemas/LanguageProperty.Common'
        - type: object
          additionalProperties:
            oneOf:
              - $ref: '#/components/schemas/Property.Output'
              - type: array
                items:
                  $ref: '#/components/schemas/Property.Output'
              - $ref: '#/components/schemas/Relationship.Output'
              - type: array
                items:
                  $ref: '#/components/schemas/Relationship.Output'
        - type: object
          properties:
            # Clause 5.2.2 Common members. System-generated
            createdAt:
              $ref: '#/components/schemas/CreatedAt'
            modifiedAt:
              $ref: '#/components/schemas/ModifiedAt'
            deletedAt:
              $ref: '#/components/schemas/DeletedAt'
            instanceId:
              description: |
                A URI uniquely identifying a Property instance,
                as mandated by (see clause 4.5.7). System generated.
              type: string
              format: uri
      required:
        - type
        - value
    LanguagePropertyNotification.Output:
      allOf:
        - $ref: '#/components/schemas/LanguageProperty.Output'
        - type: object
          properties:
            previousLanguageMap:
              description: |
                Previous Language Property languageMap.
              type: object
    EntitySelector:
      description: |
        5.2.33 This type selects which entity or group of entities are queried or subscribed to by Context Consumers.
      type: object
      properties:
        id:
          description: |
            Entity identifier.
          type: string
          format: uri
        idPattern:
          description: |
            A regular expression which denotes a pattern that shall be matched by the provided or subscribed Entities.
          type: string
        type:
          description: |
            Selector of Entity Type(s).
          type: string
      required:
        - type
    RegistrationManagementInfo:
      description: |
        5.2.34 This type represents the data to alter the default behaviour of a Context Broker when
        making a distributed operation request to a registered Context Source.
      type: object
      properties:
        localOnly:
          description: |
            If localOnly=true then distributed operations associated to this Context Source Registration
            will act only on data held directly by the registered Context Source itself (see clause 4.3.6.4).
          type: boolean
        cacheDuration:
          description: |
            Minimal period of time which shall elapse between two consecutive context information
            consumption operations (as defined in clause 5.7) related to the same context data will occur.
            If the cacheDuration latency period has not been reached, a cached value for the
            entity or its attributes shall be returned where available.
          type: string
        timeout:
          description: |
            Maximum period of time in milliseconds which may elapse before a
            forwarded request is assumed to have failed.
          type: number
          minimum: 1
        cooldown:
          description: |
            Minimum period of time in milliseconds which shall elapse before attempting
            to make a subsequent forwarded request to the same endpoint after failure.
            If requests are received before the cooldown period has expired, a timeout error
            response for the registration is automatically returned.
          type: number
          minimum: 1
    Notification:
      description: |
        5.3.1 This datatype represents the parameters that allow building a notification to be sent to a subscriber.
      type: object
      properties:
        id:
          description: |
            Notification identifier (JSON-LD @id). It shall be automatically generated by the implementation.
          type: string
          format: uri
        type:
          description: |
            JSON-LD @type.
          type: string
          enum:
            - Notification
        subscriptionId:
          description: |
            Identifier of the subscription that originated the notification.
          type: string
          format: uri
        notifiedAt:
          description: |
            Timestamp corresponding to the instant when the notification was generated by the system.
          type: string
          format: date-time
        data:
          description: |
            The content of the notification as NGSI-LD Entities. See clause 5.2.4.

            If the notification has been triggered from a Subscription that has the notification.
            endpoint.accept field set to application/geo+json then data is returned as a FeatureCollection.
            In this case, if the notification.endpoint.rece iverInfo contains the key "Prefer" and
            it is set to the value "body=json", then the FeatureCollection will not contain
            an @context field.

            If endpoint.accept is not set or holds another value then Entity[] is returned.
          oneOf:
            - type: array
              items:
                $ref: '#/components/schemas/Entity.Output'
            - $ref: '#/components/schemas/FeatureCollection'
      required:
        - id
        - type
        - subscriptionId
        - notifiedAt
        - data
    CsourceNotification:
      description: |
        5.3.2 This datatype represents the parameters that allow building a Context Source Notification
        to be sent to a subscriber.
      type: object
      properties:
        id:
          description: |
            Csource notification identifier (JSON-LD @id).
          type: string
          format: uri
        type:
          description: |
            JSON-LD @type.
          type: string
          enum:
            - CsourceNotification
        subscriptionId:
          description: |
            Identifier of the subscription that originated the notification.
          type: string
          format: uri
        notifiedAt:
          description: |
            Timestamp corresponding to the instant when the notification was generated by the system.
          type: string
          format: date-time
        data:
          description: |
            The content of the notification as NGSI-LD entities. See clause 5.2.4.
          type: array
          items:
            $ref: '#/components/schemas/CsourceRegistration.Input'
        triggerReason:
          description: |
            Indicates whether the Csources in the CsourceRegistration.Input(s) in data are newly matching
            (initial notification or creation), have been updated (but still match) or do not match any longer.

            • "newlyMatching" - describes the case that the notified Context Source Registration(s) newly
            match(es) the identified subscription. This value is used in the first notification and
            whenever a new Context Source Registration matching the Subscription has been registered,
            or an existing Context Source Registration that did not match before has been updated
            in such a way that it matches now.

            • "updated" - describes the case that the notified Context Source Registration that
            was part of a previous notification has been updated, but still matches the Subscription.

            • "noLongerMatching" - describes the case that the notified Context Source Registration
            that was part of a previous notification no longer matches the Subscription, i.e. as a result of
             an update or because it was deleted.
          type: string
          enum:
            - newlyMatching
            - updated
            - noLongerMatching
      required:
        - id
        - type
        - subscriptionId
        - notifiedAt
        - data
        - triggerReason
    ######
    # Geometry schemas
    #
    Geometry.position:
      description: |
        A single position.
      type: array
      minItems: 2
      maxItems: 2
      items:
        type: number
      additionalProperties: false
    Geometry.positionArray:
      description: |
        An array of positions.
      type: array
      items:
        $ref: '#/components/schemas/Geometry.position'
    Geometry.lineString:
      description: |
        An array of two or more positions.
      allOf:
        - $ref: '#/components/schemas/Geometry.positionArray'
        - minItems: 2
    Geometry.linearRing:
      description: |
        An array of four positions where the first equals the last.
      allOf:
        - $ref: '#/components/schemas/Geometry.positionArray'
        - minItems: 4
    Geometry.polygon:
      description: |
        An array of linear rings.
      type: array
      items:
        $ref: '#/components/schemas/Geometry.linearRing'
    Geometry.Point:
      type: object
      properties:
        type:
          type: string
          enum:
            - Point
        coordinates:
          $ref: '#/components/schemas/Geometry.position'
    Geometry.MultiPoint:
      type: object
      properties:
        type:
          type: string
          enum:
            - MultiPoint
        coordinates:
          $ref: '#/components/schemas/Geometry.positionArray'
    Geometry.Polygon:
      type: object
      properties:
        type:
          type: string
          enum:
            - Polygon
        coordinates:
          $ref: '#/components/schemas/Geometry.polygon'
    Geometry.LineString:
      type: object
      properties:
        type:
          type: string
          enum:
            - LineString
        coordinates:
          $ref: '#/components/schemas/Geometry.lineString'
    Geometry.MultiLineString:
      type: object
      properties:
        type:
          type: string
          enum:
            - MultiLineString
        coordinates:
          type: array
          items:
            $ref: '#/components/schemas/Geometry.lineString'
    Geometry.MultiPolygon:
      type: object
      properties:
        type:
          type: string
          enum:
            - MultiPolygon
        coordinates:
          type: array
          items:
            $ref: '#/components/schemas/Geometry.lineString'
    Geometry:
      description: |
        A valid GeoJSON geometry object.
      oneOf:
        - $ref: '#/components/schemas/Geometry.Point'
        - $ref: '#/components/schemas/Geometry.MultiPoint'
        - $ref: '#/components/schemas/Geometry.Polygon'
        - $ref: '#/components/schemas/Geometry.LineString'
        - $ref: '#/components/schemas/Geometry.MultiLineString'
        - $ref: '#/components/schemas/Geometry.MultiPolygon'
    #
    ######
    # Took "ProblemDetails" schema from ETSI NFV OAS
    ProblemDetails:
      description: |
        The definition of the general "ProblemDetails" data structure from
        IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
        general framework defined in IETF RFC 7807 [19], the "status" and
        "detail" attributes are mandated to be included by the present document,
        to ensure that the response contains additional textual information about
        an error. IETF RFC 7807 [19] foresees extensibility of the
        "ProblemDetails" type. It is possible that particular APIs in the present
        document, or particular implementations, define extensions to define
        additional attributes that provide more information about the error.
        The description column only provides some explanation of the meaning to
        Facilitate understanding of the design. For a full description, see
        IETF RFC 7807 [19].
      type: object
      required:
        - status
        - detail
      properties:
        type:
          description: |
            A URI reference according to IETF RFC 3986 [5] that identifies the
            problem type. It is encouraged that the URI provides human-readable
            documentation for the problem (e.g. using HTML) when dereferenced.
            When this member is not present, its value is assumed to be
            "about:blank".
          type: string
          format: URI
        title:
          description: |
            A short, human-readable summary of the problem type. It should not
            change from occurrence to occurrence of the problem, except for
            purposes of localization. If type is given and other than
            "about:blank", this attribute shall also be provided.
            A short, human-readable summary of the problem
            type.  It SHOULD NOT change from occurrence to occurrence of the
            problem, except for purposes of localization (e.g., using
            proactive content negotiation; see [RFC7231], Section 3.4).
          type: string
        status:
          description: |
            The HTTP status code for this occurrence of the problem.
            The HTTP status code ([RFC7231], Section 6) generated by the origin
            server for this occurrence of the problem.
          type: integer
        detail:
          description: |
            A human-readable explanation specific to this occurrence of the
            problem.
          type: string
        instance:
          description: |
            A URI reference that identifies the specific occurrence of the
            problem. It may yield further information if dereferenced.
          type: string
          format: URI