# coding: utf-8

"""
    NGSI-LD API

    ETSI GS CIM 009 V1.6.1 cross-cutting Context Information Management (CIM); NGSI-LD API.

    The version of the OpenAPI document: 1.6.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ngsi_ld_client.api.context_information_consumption_api import ContextInformationConsumptionApi


class TestContextInformationConsumptionApi(unittest.TestCase):
    """ContextInformationConsumptionApi unit test stubs"""

    def setUp(self) -> None:
        self.api = ContextInformationConsumptionApi()

    def tearDown(self) -> None:
        pass

    def test_query_batch(self) -> None:
        """Test case for query_batch

        Query entities based on POST 
        """
        pass

    def test_query_entity(self) -> None:
        """Test case for query_entity

        Query entities 
        """
        pass

    def test_query_subscription(self) -> None:
        """Test case for query_subscription

        Retrieve list of Subscriptions 
        """
        pass

    def test_retrieve_attr_info(self) -> None:
        """Test case for retrieve_attr_info

        Retrieve Available Attribute Information 
        """
        pass

    def test_retrieve_attributes(self) -> None:
        """Test case for retrieve_attributes

        Retrieve Available Attributes 
        """
        pass

    def test_retrieve_entity(self) -> None:
        """Test case for retrieve_entity

        Entity retrieval by id 
        """
        pass

    def test_retrieve_subscription(self) -> None:
        """Test case for retrieve_subscription

        Subscription retrieval by id 
        """
        pass

    def test_retrieve_type_info(self) -> None:
        """Test case for retrieve_type_info

        Details about available entity type 
        """
        pass

    def test_retrieve_types(self) -> None:
        """Test case for retrieve_types

        Retrieve available entity types 
        """
        pass


if __name__ == '__main__':
    unittest.main()
